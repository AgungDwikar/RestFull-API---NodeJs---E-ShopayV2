{"version":3,"sources":["../../server/models/init-models.js"],"names":["DataTypes","_sequelize","sequelize","Sequelize","configdb","database","username","password","host","dialect","operatorsAliases","dialectOptions","ssl","require","rejectUnauthorized","pool","max","min","acquire","idle","initModels","cart","category","line_items","orders","products","products_images","token_refresh","users","belongsTo","as","foreignKey","hasMany","models"],"mappings":"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","sourcesContent":["import _sequelize from \"sequelize\";\nimport Sequelize from 'sequelize';\nconst DataTypes = _sequelize.DataTypes;\nimport _cart from  \"./cart.js\";\nimport _category from  \"./category.js\";\nimport _line_items from  \"./line_items.js\";\nimport _orders from  \"./orders.js\";\nimport _products from  \"./products.js\";\nimport _products_images from  \"./products_images.js\";\nimport _token_refresh from  \"./token_refresh.js\";\nimport _users from  \"./users.js\";\n\n\nimport config from '../config/config'\nimport configdb from '../config/config-heroku'\n\n// sequelez local di comment untuk deploy ke heroku\n// const sequelize = new Sequelize(\n//   config.db_name,\n//   config.db_username,\n//   config.db_password,\n//   {\n//     dialect : \"postgres\",\n//     pool : {\n//       max : 5,\n//       min : 0,\n//       acquire : 30000,\n//       idle : 10000\n//     }\n//   }\n// )\n\nconst sequelize = new Sequelize(configdb.database, configdb.username, configdb.password, {\n  host: configdb.host,\n  dialect: configdb.dialect,\n  operatorsAliases: false,\n  dialectOptions: {\n    ssl: {\n      require: true, \n      rejectUnauthorized: false \n    }\n  },\n  pool: {\n    max: configdb.pool.max,\n    min: configdb.pool.min,\n    acquire: configdb.pool.acquire,\n    idle: configdb.pool.idle\n  }\n});\n\nfunction initModels(sequelize) {\n  const cart = _cart(sequelize, DataTypes);\n  const category = _category(sequelize, DataTypes);\n  const line_items = _line_items(sequelize, DataTypes);\n  const orders = _orders(sequelize, DataTypes);\n  const products = _products(sequelize, DataTypes);\n  const products_images = _products_images(sequelize, DataTypes);\n  const token_refresh = _token_refresh(sequelize, DataTypes);\n  const users = _users(sequelize, DataTypes);\n\n  line_items.belongsTo(cart, { as: \"lite_cart\", foreignKey: \"lite_cart_id\"});\n  cart.hasMany(line_items, { as: \"line_items\", foreignKey: \"lite_cart_id\"});\n  products.belongsTo(category, { as: \"prod_cate\", foreignKey: \"prod_cate_id\"});\n  category.hasMany(products, { as: \"products\", foreignKey: \"prod_cate_id\"});\n  products_images.belongsTo(products, { as: \"prim_prod\", foreignKey: \"prim_prod_id\"});\n  products.hasMany(products_images, { as: \"products_images\", foreignKey: \"prim_prod_id\"});\n  cart.belongsTo(users, { as: \"cart_user\", foreignKey: \"cart_user_id\"});\n  users.hasMany(cart, { as: \"carts\", foreignKey: \"cart_user_id\"});\n  orders.belongsTo(users, { as: \"order_user\", foreignKey: \"order_user_id\"});\n  users.hasMany(orders, { as: \"orders\", foreignKey: \"order_user_id\"});\n  products.belongsTo(users, { as: \"prod_user\", foreignKey: \"prod_user_id\"});\n  users.hasMany(products, { as: \"products\", foreignKey: \"prod_user_id\"});\n\n  return {\n    cart,\n    category,\n    line_items,\n    orders,\n    products,\n    products_images,\n    token_refresh,\n    users,\n  };\n}\nconst models = initModels(sequelize);\n\nexport default models;\nexport {sequelize};\n// module.exports = initModels;\n// module.exports.initModels = initModels;\n// module.exports.default = initModels;\n"],"file":"init-models.js"}