{"version":3,"sources":["../../server/controller/userController.js"],"names":["SALT_ROUND","signup","req","res","username","firstname","lastname","email","password","phone","body","hashPassword","bcrypt","hash","result","context","models","users","create","user_name","user_firstname","user_lastname","user_email","user_password","user_phone","dataValues","send","error","status","signin","findOne","where","compare","sendStatus","findAll","user_id","params","id"],"mappings":"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","sourcesContent":["import bcrypt from 'bcrypt';\r\nconst SALT_ROUND = 10;\r\n\r\nconst signup = async (req, res) => {\r\n    const { username,firstname,lastname, email,password, phone } = req.body;\r\n\r\n    let hashPassword = password;\r\n    hashPassword = await bcrypt.hash(hashPassword, SALT_ROUND);\r\n    try {\r\n        const result = await req.context.models.users.create({\r\n            user_name: username,\r\n            user_firstname: firstname,    \r\n            user_lastname: lastname,    \r\n            user_email: email,    \r\n            user_password: hashPassword,\r\n            user_phone : phone\r\n        });\r\n        const { user_name, user_email } = result.dataValues;\r\n        res.send({ user_name, user_email });\r\n    } catch (error) {\r\n        res.status(404).send(error);\r\n    }\r\n}\r\n\r\nconst signin = async (req, res) => {\r\n    const { email, password } = req.body;\r\n\r\n    try {\r\n        const result = await req.context.models.users.findOne({\r\n            where: { user_email: email }\r\n        });\r\n        const { user_name, user_email, user_password } = result.dataValues;\r\n        const compare = await bcrypt.compare(password, user_password);\r\n        if (compare) {\r\n            return res.send({ user_name, user_email });\r\n        } else {\r\n            return res.sendStatus(404);\r\n        }\r\n\r\n    } catch (error) {\r\n        return res.sendStatus(404);\r\n    }\r\n}\r\n\r\nconst findAll = async (req, res) => {\r\n    try {\r\n        const result = await req.context.models.users.findAll();\r\n        return res.send(result);\r\n    } catch (error) {\r\n        return res.status(404).send(\"no data found\");\r\n    }\r\n}\r\n\r\nconst findOne = async (req,res) => {\r\n    try {\r\n        const result = await req.context.models.users.findOne({\r\n            where:{user_id:req.params.id}\r\n        })\r\n        return res.send(result)\r\n    } catch (error) {\r\n        return res.status(404).send(\"no data found\")\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default {\r\n    findAll,\r\n    findOne,\r\n    signup,\r\n    signin,\r\n}"],"file":"userController.js"}